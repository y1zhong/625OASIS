random = ~ id,
rcov = ~ us(trait):units,
prior = prior,
verbose= T,
burnin = 10000,
nitt = 110000,
thin=100,
family = "categorical",
data = data)
})
gelman.diag(lapply(1:3, function(i)m2[[i]]$Sol))
summary(m2[[1]])
library(plotMCMC)
m3 <- lapply(1:3, function(i){
set.seed(i)
MCMCglmm(CDR ~ -1 + trait + trait:(nWBV + MMSE + eTIV + Age + Sex),
random = ~id,
rcov = ~ us(trait):units,
prior = prior,
verbose= T,
burnin = 10000,
nitt =   110000,
slice=TRUE,
thin=100,
family = "categorical",
data = data)
})
# allChains <- as.mcmc(cbind(m3[[1]]$Sol,m3[[1]]$VCV[,1]))
# plotTrace(allChains)
#
# gelman.diag(lapply(1:3, function(i)m3[[i]]$Sol))
# gelman.diag(lapply(1:3, function(i)m3[[i]]$VCV))
# plot(m3[[1]]$VCV)
# plot(m3[[1]]$Sol)
# autocorr(m3[[1]]$Sol)
# autocorr(m3[[1]]$VCV)
# summary(m3[[1]])
#
# posterior.mode(m3[[1]]$VCV)
# HPDinterval(m3[[1]]$Sol)
# HPDinterval(m3[[1]]$VCV)
m4 <- lapply(1:3, function(i){
set.seed(i)
MCMCglmm(CDR ~ -1 + trait + trait:(nWBV + eTIV + MMSE + Age + Sex + nWBVMMSE),
random = ~ id,
rcov = ~ us(trait):units,
prior = prior,
verbose= T,
thin = 100,
burnin = 10000,
nitt = 110000,
family = "categorical",
data = data)
})
gelman.diag(lapply(1:3, function(i)m4[[i]]$Sol))
summary(m4[[1]])
prior1 = list(R = list(fix=1, V=(1/k) * (I + J)),
G = list(G1 = list(V = diag(2),  nu=1, alpha.mu = c(0,0), alpha.V = 1000)))
m5 <- lapply(1:3, function(i){
set.seed(i)
MCMCglmm(CDR ~ -1 + trait + trait:(nWBV + eTIV + MMSE + Age),
random = ~ us(1+Age):id,
rcov = ~ us(trait):units,
prior = prior1,
verbose= T,
thin = 100,
burnin = 10000,
nitt = 110000,
family = "categorical",
data = data)
})
prior1 = list(R = list(fix=1, V=(1/k) * (I + J)),
G = list(G1 = list(V = diag(2),  nu=1, alpha.mu = c(0,0), alpha.V = diag(2)*1000)))
m5 <- lapply(1:3, function(i){
set.seed(i)
MCMCglmm(CDR ~ -1 + trait + trait:(nWBV + eTIV + MMSE + Age),
random = ~ us(1+Age):id,
rcov = ~ us(trait):units,
prior = prior1,
verbose= T,
thin = 100,
burnin = 10000,
nitt = 110000,
family = "categorical",
data = data)
})
#not adjust sex
m6 <- lapply(1:3, function(i){
set.seed(i)
MCMCglmm(CDR ~ -1 + trait + trait:(nWBV + eTIV + MMSE + Age),
random = ~ id,
rcov = ~ us(trait):units,
prior = prior,
verbose= T,
thin = 100,
burnin = 10000,
nitt = 110000,
family = "categorical",
data = data)
})
m1[[1]]$DIC
m2[[1]]$DIC
m3[[1]]$DIC
m4[[1]]$DIC
m5[[1]]$DIC
m6[[1]]$DIC
prior1 = list(R = list(fix=1, V=(1/k) * (I + J)),
G = list(G1 = list(V = diag(2),  nu=1, alpha.mu = c(0,0), alpha.V = diag(2)*1000)))
m5 <- lapply(1:3, function(i){
set.seed(i)
MCMCglmm(CDR ~ -1 + trait + trait:(nWBV + eTIV + MMSE + Age + Sex),
random = ~ us(1+Age):id,
rcov = ~ us(trait):units,
prior = prior1,
verbose= T,
thin = 100,
burnin = 10000,
nitt = 110000,
family = "categorical",
data = data)
})
m1[[1]]$DIC
m2[[1]]$DIC
m3[[1]]$DIC
m4[[1]]$DIC
m5[[1]]$DIC
m6[[1]]$DIC
gelman.diag(lapply(1:3, function(i)m5[[i]]$Sol))
allChains <- as.mcmc(cbind(m5[[1]]$Sol,m5[[1]]$VCV[,1]))
plotTrace(allChains)
gelman.diag(lapply(1:3, function(i)m3[[i]]$Sol))
gelman.diag(lapply(1:3, function(i)m5[[i]]$Sol))
autocorr(m5[[1]]$Sol)
autocorr(m3[[1]]$VCV)
autocorr(m5[[1]]$VCV)
summary(m5[[1]])
posterior.mode(m5[[1]]$VCV)
HPDinterval(m3[[1]]$VCV)
HPDinterval(m5[[1]]$VCV)
View(data)
allChains <- as.mcmc(cbind(m5[[1]]$Sol,m5[[1]]$VCV[,1]))
plotTrace(allChains)
m1[[1]]$DIC
m2[[1]]$DIC
m3[[1]]$DIC
m4[[1]]$DIC
m5[[1]]$DIC
m6[[1]]$DIC
gelman.diag(lapply(1:3, function(i)m4[[i]]$Sol))
gelman.diag(lapply(1:3, function(i)m5[[i]]$Sol))
gelman.diag(lapply(1:3, function(i)m6[[i]]$Sol))
library(plotMCMC)
m3 <- lapply(1:3, function(i){
set.seed(i)
MCMCglmm(CDR ~ -1 + trait + trait:(nWBV + MMSE + eTIV + Age + Sex),
random = ~id,
rcov = ~ us(trait):units,
prior = prior,
verbose= T,
burnin = 10000,
nitt =   110000,
slice=TRUE,
thin=100,
family = "categorical",
data = data)
})
allChains <- as.mcmc(cbind(m3[[1]]$Sol,m3[[1]]$VCV[,1]))
plotTrace(allChains)
gelman.diag(lapply(1:3, function(i)m3[[i]]$Sol))
gelman.diag(lapply(1:3, function(i)m3[[i]]$VCV))
plot(m3[[1]]$VCV)
plot(m3[[1]]$Sol)
posterior.mode(m3[[1]]$VCV)
#load data
library(dplyr)
library(stringr)
library(tidyr)
setwd("~/Dropbox (University of Michigan)/umich/biostat653/final")
data <- read.csv("oasis_longitudinal_demographics.csv")
colnames(data)
data <- data %>%
drop_na() %>%
filter(CDR < 2) %>%
mutate(id = as.numeric(str_sub(Subject.ID,-4,-1)))%>%
filter(id  != 181) %>%
mutate(CDR = factor(CDR, levels = c(0, 0.5, 1)),
Sex = as.factor(M.F),
Age.f = case_when(
Age>=60 & Age<=69 ~ '60s',
Age>=70 & Age<=79 ~ '70s',
Age>=80 & Age<=89 ~ '80s',
Age>=90 & Age<=99 ~ '90s'),
Age = scale(Age, scale=F),
MMSE = scale(MMSE),
nWBV = scale(nWBV),
eTIV = scale(eTIV),
nWBVMMSE = scale(nWBV * MMSE))%>%
select(id, CDR, Age, MMSE, nWBV, eTIV, nWBVMMSE, Age.f, Sex)
#load data
library(dplyr)
library(stringr)
library(tidyr)
setwd("~/Dropbox (University of Michigan)/umich/biostat653/final")
data <- read.csv("oasis_longitudinal_demographics.csv")
colnames(data)
data <- data %>%
drop_na() %>%
filter(CDR < 2) %>%
mutate(id = as.numeric(str_sub(Subject.ID,-4,-1)))%>%
filter(id  != 181) %>%
mutate(CDR = factor(CDR, levels = c(0, 0.5, 1)),
Sex = as.factor(M.F),
Age.f = case_when(
Age>=60 & Age<=69 ~ '60s',
Age>=70 & Age<=79 ~ '70s',
Age>=80 & Age<=89 ~ '80s',
Age>=90 & Age<=99 ~ '90s'),
Age = scale(Age, scale=T),
MMSE = scale(MMSE),
nWBV = scale(nWBV),
eTIV = scale(eTIV),
nWBVMMSE = scale(nWBV * MMSE))%>%
select(id, CDR, Age, MMSE, nWBV, eTIV, nWBVMMSE, Age.f, Sex)
data <- data %>% mutate(CDR = factor(CDR, levels = c(0.5, 0, 1)))
k <- length(levels(data$CDR))
I <- diag(k-1)
J <- matrix(rep(1, (k-1)^2), c(k-1, k-1))
# prior = list(R = list(fix=1, V=(1/k) * (I + J), nu=0.0002),
#               G = list(G1 = list(V = diag(1),  nu=0.0002)))
prior = list(R = list(fix=1, V=(1/k) * (I + J)),
G = list(G1 = list(V = diag(1),  nu=1, alpha.mu = 0, alpha.V = 1000)))
library(plotMCMC)
m3 <- lapply(1:3, function(i){
set.seed(i)
MCMCglmm(CDR ~ -1 + trait + trait:(nWBV + MMSE + eTIV + Age + Sex),
random = ~id,
rcov = ~ us(trait):units,
prior = prior,
verbose= T,
burnin = 10000,
nitt =   110000,
slice=TRUE,
thin=100,
family = "categorical",
data = data)
})
# allChains <- as.mcmc(cbind(m3[[1]]$Sol,m3[[1]]$VCV[,1]))
# plotTrace(allChains)
#
# gelman.diag(lapply(1:3, function(i)m3[[i]]$Sol))
# gelman.diag(lapply(1:3, function(i)m3[[i]]$VCV))
# plot(m3[[1]]$VCV)
# plot(m3[[1]]$Sol)
# autocorr(m3[[1]]$Sol)
# autocorr(m3[[1]]$VCV)
# summary(m3[[1]])
#
# posterior.mode(m3[[1]]$VCV)
# HPDinterval(m3[[1]]$Sol)
# HPDinterval(m3[[1]]$VCV)
allChains <- as.mcmc(cbind(m3[[1]]$Sol,m3[[1]]$VCV[,1]))
plotTrace(allChains)
gelman.diag(lapply(1:3, function(i)m3[[i]]$Sol))
plotTrace(allChains)
#load data
library(dplyr)
library(stringr)
library(tidyr)
setwd("~/Dropbox (University of Michigan)/umich/biostat653/final")
data <- read.csv("oasis_longitudinal_demographics.csv")
colnames(data)
data <- data %>%
drop_na() %>%
filter(CDR < 2) %>%
mutate(id = as.numeric(str_sub(Subject.ID,-4,-1)))%>%
filter(id  != 181) %>%
mutate(CDR = factor(CDR, levels = c(0, 0.5, 1)),
Sex = as.factor(M.F),
Age.f = case_when(
Age>=60 & Age<=69 ~ '60s',
Age>=70 & Age<=79 ~ '70s',
Age>=80 & Age<=89 ~ '80s',
Age>=90 & Age<=99 ~ '90s'),
Age = scale(Age, scale=F),
MMSE = scale(MMSE),
nWBV = scale(nWBV),
eTIV = scale(eTIV),
nWBVMMSE = scale(nWBV * MMSE))%>%
select(id, CDR, Age, MMSE, nWBV, eTIV, nWBVMMSE, Age.f, Sex)
data <- data %>% mutate(CDR = factor(CDR, levels = c(0.5, 0, 1)))
k <- length(levels(data$CDR))
I <- diag(k-1)
J <- matrix(rep(1, (k-1)^2), c(k-1, k-1))
# prior = list(R = list(fix=1, V=(1/k) * (I + J), nu=0.0002),
#               G = list(G1 = list(V = diag(1),  nu=0.0002)))
prior = list(R = list(fix=1, V=(1/k) * (I + J)),
G = list(G1 = list(V = diag(1),  nu=1, alpha.mu = 0, alpha.V = 1000)))
library(plotMCMC)
m3 <- lapply(1:3, function(i){
set.seed(i)
MCMCglmm(CDR ~ -1 + trait + trait:(nWBV + MMSE + eTIV + Age + Sex),
random = ~id,
rcov = ~ us(trait):units,
prior = prior,
verbose= T,
burnin = 10000,
nitt =   110000,
slice=TRUE,
thin=100,
family = "categorical",
data = data)
})
allChains <- as.mcmc(cbind(m3[[1]]$Sol,m3[[1]]$VCV[,1]))
plotTrace(allChains)
gelman.diag(lapply(1:3, function(i)m3[[i]]$Sol))
gelman.diag(lapply(1:3, function(i)m3[[i]]$VCV))
plot(m3[[1]]$Sol)
allChains <- as.mcmc(cbind(m3[[1]]$Sol,m3[[1]]$VCV[,1]))
plotTrace(allChains)
#load data
library(dplyr)
library(stringr)
library(tidyr)
setwd("~/Dropbox (University of Michigan)/umich/biostat653/final")
data <- read.csv("oasis_longitudinal_demographics.csv")
colnames(data)
data <- data %>%
drop_na() %>%
filter(CDR < 2) %>%
mutate(id = as.numeric(str_sub(Subject.ID,-4,-1)))%>%
filter(id  != 181) %>%
mutate(CDR = factor(CDR, levels = c(0, 0.5, 1)),
Sex = as.factor(M.F),
Age.f = case_when(
Age>=60 & Age<=69 ~ '60s',
Age>=70 & Age<=79 ~ '70s',
Age>=80 & Age<=89 ~ '80s',
Age>=90 & Age<=99 ~ '90s'),
Age = scale(Age, scale=F),
MMSE = scale(MMSE),
nWBV = scale(nWBV),
eTIV = scale(eTIV),
nWBVMMSE = scale(nWBV * MMSE))%>%
select(id, CDR, Age, MMSE, nWBV, eTIV, nWBVMMSE, Age.f, Sex)
data <- data %>% mutate(CDR = factor(CDR, levels = c(0.5, 0, 1)))
k <- length(levels(data$CDR))
I <- diag(k-1)
J <- matrix(rep(1, (k-1)^2), c(k-1, k-1))
# prior = list(R = list(fix=1, V=(1/k) * (I + J), nu=0.0002),
#               G = list(G1 = list(V = diag(1),  nu=0.0002)))
prior = list(R = list(fix=1, V=(1/k) * (I + J)),
G = list(G1 = list(V = diag(1),  nu=1, alpha.mu = 0, alpha.V = 1000)))
library(plotMCMC)
m3 <- lapply(1:3, function(i){
set.seed(i)
MCMCglmm(CDR ~ -1 + trait + trait:(nWBV + MMSE + eTIV + Age + Sex),
random = ~id,
rcov = ~ us(trait):units,
prior = prior,
verbose= T,
burnin = 10000,
nitt =   110000,
slice=TRUE,
thin=100,
family = "categorical",
data = data)
})
gelman.diag(lapply(1:3, function(i)m3[[i]]$Sol))
m3 <- lapply(1:3, function(i){
set.seed(i)
MCMCglmm(CDR ~ -1 + trait + trait: (MMSE + nWBV  + eTIV + Age + Sex),
random = ~id,
rcov = ~ us(trait):units,
prior = prior,
verbose= T,
burnin = 10000,
nitt =   110000,
slice=TRUE,
thin=100,
family = "categorical",
data = data)
})
allChains <- as.mcmc(cbind(m3[[1]]$Sol,m3[[1]]$VCV[,1]))
plotTrace(allChains)
gelman.diag(lapply(1:3, function(i)m3[[i]]$Sol))
summary(m3[[1]])
plot(m3[[1]]$Sol)
plotTrace(allChains)
library(plotMCMC)
m3 <- lapply(1:3, function(i){
set.seed(i)
MCMCglmm(CDR ~ -1 + trait + trait: (MMSE + nWBV  + eTIV + Age + Sex),
random = ~id,
rcov = ~ us(trait):units,
prior = prior,
verbose= T,
burnin = 50000,
nitt =   150000,
slice=TRUE,
thin=100,
family = "categorical",
data = data)
})
allChains <- as.mcmc(cbind(m3[[1]]$Sol,m3[[1]]$VCV[,1]))
plotTrace(allChains)
gelman.diag(lapply(1:3, function(i)m3[[i]]$Sol))
summary(m3[[1]])
#prediction
ctrl <- trainControl(method = "cv", number=10, savePredictions=TRUE, classProbs=TRUE)
library(caret)
trainIndex <- createDataPartition(data$id, p = .8,
list = FALSE,
times = 5)
View(trainIndex)
data$id
set.seed(123)
trainIndex <- createDataPartition(unqieu(data$id), p = .8,
list = FALSE,
times = 5)
set.seed(123)
trainIndex <- createDataPartition(unique(data$id), p = .8,
list = FALSE,
times = 5)
Train <- data[ trainIndex,]
View(Train)
Train <- data[ trainIndex,1]
Train <- data[ trainIndex[1],]
View(Train)
Train <- data[ trainIndex[,1],]
View(Train)
Train <- data[ trainIndex[,1],]
Valid <- data[-trainIndex[,1],]
set.seed(1)
m3.1 <- MCMCglmm(CDR ~ -1 + trait + trait: (MMSE + nWBV  + eTIV + Age + Sex),
random = ~id,
rcov = ~ us(trait):units,
prior = prior,
verbose= T,
burnin = 50000,
nitt =   150000,
slice=TRUE,
thin=100,
family = "categorical",
data = Train)
predict(m3.1, Valid)
pred = predict(m3.1, Valid,type="response")
View(Train)
Valid <- data[-trainIndex[,1],]
Train <- data[ which(data$id %in% trainIndex[,1]),]
Valid <- data[-which(data$id %in% trainIndex[,1]),]
set.seed(1)
m3.1 <- MCMCglmm(CDR ~ -1 + trait + trait: (MMSE + nWBV  + eTIV + Age + Sex),
random = ~id,
rcov = ~ us(trait):units,
prior = prior,
verbose= T,
burnin = 50000,
nitt =   150000,
slice=TRUE,
thin=100,
family = "categorical",
data = Train)
pred = predict(m3.1, Valid,type="response")
pred = predict(m3.1, marginal = ~id, Valid,type="response")
pred = predict(m3.1, marginal = ~id,newdata = Valid,type="response")
View(m3.1)
allChains <- as.mcmc(cbind(m3[[1]]$Sol,m3[[1]]$VCV[,1]))
plotTrace(allChains)
gelman.diag(lapply(1:3, function(i)m3[[i]]$Sol))
summary(m3[[1]])
HPDinterval(m3[[1]]$VCV)
posterior.mode(m3[[1]]$VCV)
HPDinterval(m3[[1]]$VCV)
posterior.mode(m3[[1]]$VCV)
posterior.mode(m3[[1]]$VCV)
posterior.mode(m3[[1]]$VCV)[1]
posterior.mode(m3[[1]]$VCV)
summary(m3[[1]])
library(plotMCMC)
m3 <- lapply(1:3, function(i){
set.seed(i)
MCMCglmm(CDR ~ -1 + trait + trait: (MMSE + nWBV  + eTIV + Age + Sex),
random = ~id,
rcov = ~ us(trait):units,
prior = prior,
verbose= T,
burnin = 500000,
nitt =   600000,
slice=TRUE,
thin=100,
family = "categorical",
data = data)
})
allChains <- as.mcmc(cbind(m3[[1]]$Sol,m3[[1]]$VCV[,1]))
plotTrace(allChains)
gelman.diag(lapply(1:3, function(i)m3[[i]]$Sol))
autocorr(m3[[1]]$Sol)
summary(m3[[1]])
m3 <- lapply(1:3, function(i){
set.seed(i)
MCMCglmm(CDR ~ -1 + trait + trait: (MMSE + nWBV  + eTIV + Age + Sex),
random = ~id,
rcov = ~ us(trait):units,
prior = prior,
verbose= T,
burnin = 50000,
nitt =   150000,
slice=TRUE,
thin=100,
family = "categorical",
data = data)
})
